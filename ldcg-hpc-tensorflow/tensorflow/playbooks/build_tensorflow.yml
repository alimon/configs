- name: install tensorflow build requirements (CentOS)
  become: yes
  dnf:
    name:
      - expect
      - git
      - patch
      - python3-virtualenv
      - python3-wheel
  when: ansible_os_family == 'Red Hat'

- name: install tensorflow build requirements (Debian)
  become: yes
  apt:
    name:
      - expect
      - git
      - patch
      - python3-virtualenv
      - python3-wheel
  when: ansible_os_family == 'Debian'

- name: fetch tensorflow {{ tensorflow_version }} source
  get_url:
    url: "https://github.com/tensorflow/tensorflow/archive/v{{ tensorflow_version }}.tar.gz"
    dest: "{{ build_dir }}/tensorflow-{{ tensorflow_version }}.tar.gz"
    mode: 0600

- name: unpack tensorflow {{ tensorflow_version }} source
  unarchive:
    src: "{{ build_dir }}/tensorflow-{{ tensorflow_version }}.tar.gz"
    dest: "{{ build_dir }}/"
    remote_src: yes

- name: copy configure script
  copy:
    src: "files/configure_tensorflow"
    dest: "{{ build_dir }}/tensorflow-{{ tensorflow_version }}/configure_tensorflow"
    mode: 0400

- name: build tensorflow {{ tensorflow_version }}
  shell:
    cmd: |
      set -xe
      expect configure_tensorflow
      bazel clean --expunge
      bazel build --config=noaws --config=nogcp --config=nonccl //tensorflow/tools/pip_package:build_pip_package --verbose_failures
      mkdir tensorflow-pkg
      bazel-bin/tensorflow/tools/pip_package/build_pip_package --cpu ./tensorflow-pkg

    chdir: "{{ build_dir }}/tensorflow-{{ tensorflow_version }}/"
    creates: "{{ build_dir }}/tensorflow-{{ tensorflow_version }}/tensorflow-pkg/"
    executable: /bin/bash

- name: stop bazel server
  command:
    cmd: bazel shutdown
    chdir: "{{ build_dir }}/tensorflow-{{ tensorflow_version }}/"

- name: get name of built wheel file
  find:
    path: "{{ build_dir }}/tensorflow-{{ tensorflow_version }}/tensorflow-pkg/"
    patterns: "tensorflow_*.whl"
    file_type: file
  register: wheel_file

- name: install tensorflow {{ tensorflow_version }}
  become: yes
  pip:
    name: "{{ wheel_file.files | map(attribute='path') | list }}"
#   virtualenv: "{{ build_dir }}/virtualenv"
#   virtualenv_command: "/usr/bin/python3 -m venv"
