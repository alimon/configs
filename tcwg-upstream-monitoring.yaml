- job:
    name: tcwg-upstream-monitoring
    project-type: matrix
    defaults: global
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
            linaro:
                - job-build
                - job-cancel
        - build-discarder:
            days-to-keep: 30
            num-to-keep: 30
        - throttle:
            max-total: 2
            option: project
    parameters:
        - string:
            name: override
            default: ''
            description: 'Versions of components to build; e.g. binutils=binutils-gdb.git/linaro_binutils-2_25-branch gcc=gcc.git~linaro/gcc-5-branch glibc=glibc.git~release/2.21/master'
        - string:
            name: native_x86_64_languages
            default: 'c,c++,fortran,lto,objc,obj-c++'
            description: 'Languages to build for x86_64 native toolchains, e.g., "c,c++" or "all" or "default"'
        - string:
            name: native_aarchXX_languages
            default: 'c,c++,fortran,lto,objc,obj-c++'
            description: 'Languages to build for AArchXX native toolchains, e.g., "c,c++" or "all" or "default"'
        - string:
            name: log_server
            default: dev-01.tcwglab:logs
            description: 'Log_Server'
        - string:
            name: ref_build
            default: 'previous'
            description: 'Reference build for comparison, e.g., "lastSuccess" or "previous" or job number'
    disabled: false
    node: tcwg-coordinator
    child-workspace: $branch
    concurrent: true
    display-name: 'TCWG GCC Upstream Monitoring'
    scm:
        - git:
            url: https://git.linaro.org/toolchain/gcc.git
            refspec: +refs/heads/master:refs/remotes/origin/master
            name: origin
            branches:
               - refs/heads/master
            basedir: gcc
            scm-name: GCC
            skip-tag: true
            wipe-workspace: false
            reference-repo: /home/tcwg-buildslave/snapshots-ref/gcc.git
            clean:
                before: true
    axes:
        - axis:
            type: user-defined
            name: branch
            values:
                - gcc-master
    triggers:
        # Every 8 hours at 00:20, 08:20, 16:20
        - timed: '20 0,8,16 * * *'
    wrappers:
        - timeout:
            timeout: 2400
        - timestamps
        - ssh-agent-credentials:
            # tcwg-buildslave user id
            users:
                - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
    builders:
        - build-name-setter:
            template: '${branch} #${BUILD_NUMBER}'
            macro: true
        - shell: |
            #!/bin/bash

            set -ex

            shopt -s extglob

            case "$branch" in
                all-master)
                    gcc_branch=master
                    config=master ;;
                gcc-master)
                    gcc_branch=master
                    config=latest-rel ;;
                gcc-*-branch)
                    gcc_branch=$branch
                    config=latest-rel ;;
                *) echo "ERROR: Unsupported branch: $branch"; exit 1 ;;
            esac

            for i in gcc; do
                pushd $i
                comp_rev=$(git rev-parse origin/${gcc_branch})
                comp_list="$i=$i.git@$comp_rev $comp_list"
                popd
            done

            svnrev_gcc="$(git -C gcc log -n 1 | grep git-svn-id: | awk '{print $2;}' | cut -d@ -f2)"

            cat <<EOF > buildfarm_parameters
            override=$(echo ${comp_list} --extraconfigdir ../config/$config $override)
            log_name=tcwg-upstream-monitoring/${branch}-$BUILD_NUMBER/@@host@@.\$target
            runtests=tcwg-x86_64-build tcwg-apm_32-build tcwg-apm_64-build
            host_x86_64_excludecheck=gdb
            host_aarchXX_excludecheck=gdb
            host_x86_64_languages=$native_x86_64_languages
            host_aarchXX_languages=$native_aarchXX_languages
            target_list=tcwg-x86_64-build tcwg-apm_32-build tcwg-apm_64-build
            log_server=$log_server
            abe_branch=tested
            scripts_branch=tested
            build_container_tag=lts_1
            displaytag=upstream-monitoring-$branch-gcc-r${svnrev_gcc=}-${BUILD_NUMBER}
            send_results_to=gcc-testresults@gcc.gnu.org
            EOF
        - trigger-builds:
            - project: tcwg-buildfarm
              property-file: buildfarm_parameters
              block: true
              block-thresholds:
                  build-step-failure-threshold: 'never'
                  unstable-threshold: 'never'
                  failure-threshold: 'never'
        - shell: |
            #!/bin/bash

            set -ex

            shopt -s extglob

            case "$ref_build" in
                lastSuccess)   ref_build_num=$(wget -q --no-check-certificate -O - "${JOB_URL}lastSuccessfulBuild/buildNumber") ;;
                previous)      ref_build_num=$(wget -q --no-check-certificate -O - "${JOB_URL}lastCompletedBuild/buildNumber") ;;
                [1-9]*([0-9])) ref_build_num="$ref_build" ;;
                *) echo "ERROR: Cannot handle ref_build: $ref_build"; exit 1 ;;
            esac

            cat <<EOF > compare_results_parameters
            ref_logs=tcwg-upstream-monitoring/${branch}-$ref_build_num
            new_logs=tcwg-upstream-monitoring/${branch}-$BUILD_NUMBER
            show_results=false
            log_server=$log_server
            EOF
        - trigger-builds:
            - project: tcwg-compare-results
              property-file: compare_results_parameters
              block: true
    publishers:
        - workspace-cleanup:
             include:
              - "*_parameters"
        - email-ext:
            recipients: 'tcwg-validation@linaro.org'
            aborted: true
            matrix-trigger: only-parent
