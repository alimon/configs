# Auto generated from tcwg_bmk_dev.yaml.in and tcwg_bmk_dev/tcwg_bmk_dev_llvm.def. Do not edit.
#BEGIN: tcwg_bmk/tcwg_bmk.yaml.inc
#BEGIN: tcwg/round-robin.yaml.inc
- scm:
    name: clang-scm
    scm:
        - git:
            url: '{llvm_url}'
            branches:
              - 'refs/heads/{llvm_branch}'
            basedir: llvm
            skip-tag: true
            reference-repo: /home/tcwg-buildslave/snapshots-ref/llvm-project.git
            wipe-workspace: false
            clean:
              before: true
            prune: true
- scm:
    name: binutils-scm
    scm:
        - git:
            url: '{binutils_url}'
            branches:
              - 'refs/heads/{binutils_branch}'
            basedir: binutils
            skip-tag: true
            reference-repo: /home/tcwg-buildslave/snapshots-ref/binutils-gdb.git
            wipe-workspace: false
            clean:
              before: true
            prune: true
- scm:
    name: gcc-scm
    scm:
        - git:
            url: '{gcc_url}'
            branches:
              - 'refs/heads/{gcc_branch}'
            basedir: gcc
            skip-tag: true
            reference-repo: /home/tcwg-buildslave/snapshots-ref/gcc.git
            wipe-workspace: false
            clean:
              before: true
            prune: true
- scm:
    name: glibc-scm
    scm:
        - git:
            url: '{glibc_url}'
            branches:
              - 'refs/heads/{glibc_branch}'
            basedir: glibc
            skip-tag: true
            reference-repo: /home/tcwg-buildslave/snapshots-ref/glibc.git
            wipe-workspace: false
            clean:
              before: true
            prune: true
- scm:
    name: linux-scm
    scm:
        - git:
            url: '{linux_url}'
            branches:
              - 'refs/heads/{linux_branch}'
            basedir: linux
            skip-tag: true
            reference-repo: /home/tcwg-buildslave/snapshots-ref/linux.git
            wipe-workspace: false
            clean:
              before: true
            prune: true
- scm:
    name: jenkins-scripts
    scm:
      - git:
          url: https://git.linaro.org/toolchain/jenkins-scripts.git
          refspec: +refs/heads/*:refs/remotes/origin/* +refs/changes/*:refs/changes/*
          branches:
            - $scripts_branch
          basedir: jenkins-scripts
          skip-tag: true
          reference-repo: /home/tcwg-buildslave/snapshots-ref/jenkins-scripts.git
          wipe-workspace: false
          clean:
            before: true
          prune: true

- parameter:
    name: default-parameters
    parameters:
      - string:
          name: mail_recipients
          default: default
          description: "Comma-separated list of email recipients; use 'default' unless testing"
      - string:
          name: distro
          default: bionic
          description: 'Distro image to use'
      - string:
          name: scripts_branch
          default: master
          description: 'Scripts revision to use'
#END:   tcwg/round-robin.yaml.inc
- scm:
    name: bmk-scripts
    scm:
      - git:
          url: https://git.linaro.org/toolchain/bmk-scripts.git
          refspec: +refs/heads/*:refs/remotes/origin/* +refs/changes/*:refs/changes/*
          branches:
            - $bmk_branch
          basedir: bmk-scripts
          skip-tag: true
          reference-repo: /home/tcwg-buildslave/snapshots-ref/bmk-scripts.git
          wipe-workspace: false
          clean:
            before: true
          prune: true

- property:
    name: bmk-properties
    properties:
      - authorization:
          tcwg-benchmark:
            - job-read
            - job-extended-read
            - job-build
            - job-cancel
      - build-discarder:
          days-to-keep: 30
          num-to-keep: 30

- parameter:
    name: build-parameters
    parameters:
      - string:
          name: ci_project
          default: '{ci_project}'
          description: "CI project ID; used as namespace for git branches"
      - string:
          name: ci_config
          default: '{ci_config}'
          description: "CI configuration ID: llvm-{{toolchain_ver}}-{{target}}-{{bmk}}-{{cflags}}"
      - string:
          name: binutils_url
          default: '{binutils_url}'
          description: "binutils git URL"
      - string:
          name: binutils_branch
          default: '{default_branch}'
          description: "binutils branch or sha1 to build, or 'baseline'"
      - string:
          name: gcc_url
          default: '{gcc_url}'
          description: "gcc git URL"
      - string:
          name: gcc_branch
          default: '{default_branch}'
          description: "gcc branch or sha1 to build, or 'baseline'"
      - string:
          name: glibc_url
          default: '{glibc_url}'
          description: "glibc git URL"
      - string:
          name: glibc_branch
          default: '{default_branch}'
          description: "glibc branch or sha1 to build, or 'baseline'"
      - string:
          name: llvm_url
          default: '{llvm_url}'
          description: "llvm git URL"
      - string:
          name: llvm_branch
          default: '{default_branch}'
          description: "llvm branch or sha1 to build, or 'baseline'"
- parameter:
    name: bmk-parameters
    parameters:
      - string:
          name: extra_build_params
          default: ""
          description: "Extra parameters to pass to the build script"
      - default-parameters
      - string:
          name: bmk_branch
          default: master
          description: 'Benchmark scripts revision to use'

- builder:
    name: run-build-script
    builders:
      - shell:
          command: |
            #!/bin/bash
            set -ex
            # Delete artifacts now to avoid re-using stale artifacts if
            # below docker-run.sh fails to start up a container.
            rm -rf artifacts/
            mkdir -p artifacts/jenkins
            build_name="#$BUILD_NUMBER-$ci_project/$ci_config"
            branch_opt=""
            # 1 to skip jenkins-scripts
            i=1
            for c in {components}; do
              eval "u=\$$$${{c}}_url"
              eval "b=\$$$${{c}}_branch"
              if [ x"$b" != x"baseline" ]; then
                build_name="$build_name-$c"
                branch_opt="$branch_opt ==rr[${{c}}_url] $u ==rr[${{c}}_branch] $b"
              fi
            done

            ./jenkins-scripts/docker-run.sh \
              --distro $distro \
              --ssh_info true \
              -- \
              ./jenkins-scripts/tcwg_bmk-build.sh \
              %% artifacts/jenkins/manifest.sh \
              --BUILD_URL "$BUILD_URL" \
              --scripts_branch "$scripts_branch" \
              --bmk_branch "$bmk_branch" \
              ==rr[ci_project] $ci_project \
              ==rr[ci_config] $ci_config \
              $branch_opt \
              ==rr[mode] "jenkins-full" \
              ==rr[update_baseline] "$update_baseline" \
              $extra_build_params &
            res=0 && wait $! || res=$?

            if [ $res != 0 ]; then
              touch artifacts/failures
            fi

            if [ -e artifacts/results ]; then
              build_name="$build_name-R$(tail -n1 artifacts/results)"
            fi
            if [ x"$update_baseline" != x"update" ]; then
              build_name="$build_name-$update_baseline"
            fi
            if [ -f artifacts/trigger-bisect ]; then
              build_name="$build_name-bisect"
            fi
            echo "$build_name" > artifacts/jenkins/build-name

- builder:
    name: run-bisect-script
    builders:
      - shell:
          command: |
            #!/bin/bash
            set -ex
            # Delete artifacts now to avoid re-using stale artifacts if
            # below docker-run.sh fails to start up a container.
            rm -rf artifacts/
            mkdir -p artifacts/jenkins
            build_name="#$BUILD_NUMBER-$ci_project/$ci_config-$current_project"
            echo "$build_name" > artifacts/jenkins/build-name
            # artifacts/jenkins/mail-*.txt will be overwritten in successful builds.
            echo "christophe.lyon@linaro.org" > artifacts/jenkins/mail-recipients.txt
            echo "Build $BUILD_URL failed" > artifacts/jenkins/mail-body.txt

            branch_opt=""
            for c in {components}; do
              eval "u=\$$$${{c}}_url"
              if [ x"$c" = x"$current_project" ]; then
                branch_opt="$branch_opt ==rr[${{c}}_url] $u"
              fi
            done

            ./jenkins-scripts/docker-run.sh \
              --distro $distro \
              --ssh_info true \
              -- \
              ./jenkins-scripts/round-robin-bisect.sh \
              %% artifacts/manifests/bisect.sh \
              --BUILD_URL "$BUILD_URL" \
              --current_project "$current_project" \
              --baseline_branch "$baseline_branch" \
              --bad_branch "$bad_branch" \
              --replay_log "$(pwd)/jenkins-scripts/replay_log" \
              --build_script "./jenkins-scripts/tcwg_bmk-build.sh" \
              -- \
              --scripts_branch "$scripts_branch" \
              --bmk_branch "$bmk_branch" \
              ==rr[ci_project] $ci_project \
              ==rr[ci_config] $ci_config \
              $branch_opt \
              $extra_build_params

            if [ x"$mail_recipients" != x"default" ]; then
              echo "$mail_recipients" > artifacts/jenkins/mail-recipients.txt
            fi

- builder:
    name: trigger-followup-builds
    builders:
      - build-name-setter:
          name: 'artifacts/jenkins/build-name'
          file: true
      - shell: |
          #!/bin/bash
          set -ex
          for i in artifacts/trigger-build-* artifacts/trigger-bisect; do
            if [ -f $i ]; then
              echo "ci_project=$ci_project" >> $i
              echo "ci_config=$ci_config" >> $i
              echo "binutils_url=$binutils_url" >> $i
              echo "gcc_url=$gcc_url" >> $i
              echo "glibc_url=$glibc_url" >> $i
              echo "llvm_url=$llvm_url" >> $i
              echo "mail_recipients=$mail_recipients" >> $i
              echo "distro=$distro" >> $i
              echo "scripts_branch=$scripts_branch" >> $i
              echo "bmk_branch=$bmk_branch" >> $i
            fi
          done
      - trigger-builds:
          - project: '{rr_project}-build-{ci_project_config}'
            parameter-factories:
              - factory: filebuild
                file-pattern: artifacts/trigger-build-*
          - project: '{rr_project}-bisect-{ci_project_config}'
            property-file: artifacts/trigger-bisect
#END:   tcwg_bmk/tcwg_bmk.yaml.inc

- project:
    name: tcwg_bmk_dev_llvm
    hw:
      - tk1:
          node: tcwg-x86_64-build_bmk_tk1
      - tx1:
          node: tcwg-x86_64-build_bmk_tx1
    components: binutils gcc glibc llvm
    jobs:
      - 'tcwg_bmk_dev_llvm-build-tcwg_bmk_{hw}'
      - 'tcwg_bmk_dev_llvm-bisect-tcwg_bmk_{hw}'

- view:
    name: tcwg_bmk_dev_llvm
    view-type: list
    job-name:
      - tcwg_bmk_dev_llvm-build-tcwg_bmk_tk1
      - tcwg_bmk_dev_llvm-bisect-tcwg_bmk_tk1
      - tcwg_bmk_dev_llvm-build-tcwg_bmk_tx1
      - tcwg_bmk_dev_llvm-bisect-tcwg_bmk_tx1
      - tcwg-benchmark-tk1
      - tcwg-benchmark-tx1

- job-template:
    name: tcwg_bmk_dev_llvm-build-tcwg_bmk_{hw}
    project-type: freestyle
    defaults: global
    properties:
      - bmk-properties
      - build-blocker:
          blocking-jobs:
            - "tcwg_bmk_dev_.*-bisect-tcwg_bmk_{hw}"
          queue-scanning: 'ALL'
    parameters:
      - build-parameters:
          ci_project: tcwg_bmk-YOUR_ID
          ci_config: llvm-release-aarch64-spec2k6-O2
          binutils_url: https://git.linaro.org/toolchain/ci/binutils-gdb.git
          gcc_url: https://git.linaro.org/toolchain/ci/gcc.git
          glibc_url: https://git.linaro.org/toolchain/ci/glibc.git
          llvm_url: https://git.linaro.org/toolchain/ci/llvm-project.git
          default_branch: baseline
      - choice:
          name: update_baseline
          choices:
            - update
            - reset
            - init
            - push
          description: "What to do with baseline in this build"
      - bmk-parameters
    disabled: false
    node: '{node}'
    concurrent: false
    display-name: 'TCWG Build tcwg_bmk_{hw}/llvm'
    workspace: workspace/tcwg_bmk_$EXECUTOR_NUMBER
    scm:
      - jenkins-scripts
      - bmk-scripts
    wrappers:
      - timeout:
          timeout: 600
      - timestamps
      - ssh-agent-credentials:
          # tcwg-buildslave user id
          users:
            - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
    builders:
      - run-build-script:
          components: '{components}'
      - trigger-followup-builds:
          rr_project: 'tcwg_bmk_dev_llvm'
          ci_project_config: 'tcwg_bmk_{hw}'
      - shell: |
          #!/bin/bash
          if [ -f artifacts/failures ]; then
            exit 1
          fi
    publishers:
        - archive:
            artifacts: 'artifacts/**'
            latest-only: false

- job-template:
    name: tcwg_bmk_dev_llvm-bisect-tcwg_bmk_{hw}
    project-type: freestyle
    defaults: global
    properties:
      - bmk-properties
    parameters:
      - string:
          name: ci_project
          default: 'tcwg_bmk-YOUR_ID'
          description: "CI project ID; used as namespace for git branches"
      - string:
          name: ci_config
          default: llvm-release-aarch64-spec2k6-O2
          description: "CI configuration ID: llvm-{{toolchain_ver}}-{{target}}-{{bmk}}-{{cflags}}"
      - string:
          name: binutils_url
          default: https://git.linaro.org/toolchain/ci/binutils-gdb.git
          description: "binutils git URL"
      - string:
          name: gcc_url
          default: https://git.linaro.org/toolchain/ci/gcc.git
          description: "gcc git URL"
      - string:
          name: glibc_url
          default: https://git.linaro.org/toolchain/ci/glibc.git
          description: "glibc git URL"
      - string:
          name: llvm_url
          default: https://git.linaro.org/toolchain/ci/llvm-project.git
          description: "llvm git URL"
      - string:
          name: current_project
          default: ""
          description: "Project to bisect"
      - string:
          name: baseline_branch
          default: "baseline"
          description: "Baseline branch or sha1"
      - string:
          name: bad_branch
          default: ""
          description: "Bad branch or sha1"
      - file:
          name: jenkins-scripts/replay_log
          description: "Replay part of bisect using provided bisect log"
      - bmk-parameters
    disabled: false
    node: '{node}'
    concurrent: false
    display-name: 'TCWG Bisect tcwg_bmk_{hw}/llvm'
    workspace: workspace/tcwg_bmk_$EXECUTOR_NUMBER
    scm:
      - jenkins-scripts
      - bmk-scripts
    wrappers:
      - timeout:
          timeout: 2880
      - timestamps
      - ssh-agent-credentials:
          # tcwg-buildslave user id
          users:
            - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
    builders:
        - run-bisect-script
        - trigger-followup-builds:
            rr_project: 'tcwg_bmk_dev_llvm'
            ci_project_config: 'tcwg_bmk_{hw}'
    publishers:
        - archive:
            artifacts: 'artifacts/**'
            latest-only: false
        - email-ext:
            recipients: ${{FILE,path="artifacts/jenkins/mail-recipients.txt"}}
            content-type: text
            body: |
              ${{FILE,path="artifacts/jenkins/mail-body.txt"}}
            failure: true
            success: true
            send-to:
              - recipients
# checksum: 76e3020885e318a54604cc216f070340
