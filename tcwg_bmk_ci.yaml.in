- project:
    name: tcwg_bmk_ci_#{TOOLCHAIN}
    binutils_url: git://sourceware.org/git/binutils-gdb.git
    gcc_url: https://github.com/gcc-mirror/gcc.git
    glibc_url: git://sourceware.org/git/glibc.git
    hw:
      - tk1:
          target: arm
          node: tcwg-x86_64-build_bmk_tk1
      - tx1:
          target: aarch64
          node: tcwg-x86_64-build_bmk_tx1
    toolchain_name: #{TOOLCHAIN}
#if TOOLCHAIN_gnu
    components: binutils gcc glibc
#elif TOOLCHAIN_llvm
    components: binutils gcc glibc llvm
    llvm_url: https://github.com/llvm/llvm-project.git
#endif
    toolchain_ver:
      - master:
          binutils_branch: master
          gcc_branch: master
          glibc_branch: master
#if TOOLCHAIN_llvm
          llvm_branch: master
#endif
      - release:
          binutils_branch: binutils-2_33-branch
          gcc_branch: releases/gcc-9
          glibc_branch: release/2.30/master
#if TOOLCHAIN_llvm
          llvm_branch: release/10.x
#endif
    bmk:
      - spec2k6
    cflags:
      - Os:
          cron_schedule: H H H/3 * *
      - Os_LTO:
          cron_schedule: H H H/3 * *
      - Oz:
          cron_schedule: H H H/3 * *
      - Oz_LTO:
          cron_schedule: H H H/3 * *
      - O2:
          cron_schedule: H H H/5 * *
      - O2_LTO:
          cron_schedule: H H H/5 * *
      - O3:
          cron_schedule: H H H/5 * *
      - O3_LTO:
          cron_schedule: H H H/5 * *
      - Os-vs-Os_LTO:
          cron_schedule: H H H/7 * *
      - O2-vs-O2_LTO:
          cron_schedule: H H H/7 * *
      - O3-vs-O3_LTO:
          cron_schedule: H H H/7 * *
    jobs:
      - 'tcwg_bmk_ci_#{TOOLCHAIN}-build-tcwg_bmk_{hw}-#{TOOLCHAIN}-{toolchain_ver}-{target}-{bmk}-{cflags}'
      - 'tcwg_bmk_ci_#{TOOLCHAIN}-bisect-tcwg_bmk_{hw}-#{TOOLCHAIN}-{toolchain_ver}-{target}-{bmk}-{cflags}'
    exclude:
      - toolchain_name: gnu
        cflags: Oz
      - toolchain_name: gnu
        cflags: Oz_LTO
      - toolchain_name: llvm
        cflags: Os-vs-Os_LTO
      - toolchain_name: llvm
        cflags: O2-vs-O2_LTO
      - toolchain_name: llvm
        cflags: O3-vs-O3_LTO

- view:
    name: tcwg_bmk_ci_#{TOOLCHAIN}
    view-type: list
    regex: 'tcwg_bmk_ci_#{TOOLCHAIN}-.*'

#include tcwg_bmk/tcwg_bmk.yaml.inc

- job-template:
    name: tcwg_bmk_ci_#{TOOLCHAIN}-build-tcwg_bmk_{hw}-#{TOOLCHAIN}-{toolchain_ver}-{target}-{bmk}-{cflags}
    project-type: freestyle
    defaults: global
    properties:
      - bmk-properties
      - build-blocker:
          blocking-jobs:
            - "tcwg_bmk_dev_.*-tcwg_bmk_{hw}"
            - "tcwg_bmk_ci_#{TOOLCHAIN}-bisect-tcwg_bmk_{hw}-#{TOOLCHAIN}-{toolchain_ver}-{target}-{bmk}-{cflags}"
          queue-scanning: 'ALL'
    parameters:
      - build-parameters:
          ci_project: 'tcwg_bmk_{hw}'
          ci_config: '#{TOOLCHAIN}-{toolchain_ver}-{target}-{bmk}-{cflags}'
          binutils_url: '{binutils_url}'
          gcc_url: '{gcc_url}'
          glibc_url: '{glibc_url}'
#if TOOLCHAIN_llvm
          llvm_url: '{llvm_url}'
#endif
          default_branch: default
      - choice:
          name: update_baseline
          choices:
            - update
            - reset
            - init
            - push
          description: "What to do with baseline in this build"
      - bmk-parameters
    disabled: false
    node: '{node}'
    concurrent: false
    display-name: 'TCWG Build tcwg_bmk_{hw}/#{TOOLCHAIN}-{toolchain_ver}-{target}-{bmk}-{cflags}'
    workspace: workspace/tcwg_bmk_$EXECUTOR_NUMBER
    scm:
      - jenkins-scripts
      - binutils-scm:
          binutils_url: '{binutils_url}'
          binutils_branch: '{binutils_branch}'
      - gcc-scm:
          gcc_url: '{gcc_url}'
          gcc_branch: '{gcc_branch}'
      - glibc-scm:
          glibc_url: '{glibc_url}'
          glibc_branch: '{glibc_branch}'
#if TOOLCHAIN_llvm
      - clang-scm:
          llvm_url: '{llvm_url}'
          llvm_branch: '{llvm_branch}'
#endif
      - bmk-scripts
    triggers:
      - pollscm:
          cron: '{cron_schedule}'
    wrappers:
      - timeout:
          timeout: 600
      - timestamps
      - ssh-agent-credentials:
          # tcwg-buildslave user id
          users:
            - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
    builders:
      - run-build-script:
          components: '{components}'
      - trigger-followup-builds:
          rr_project: 'tcwg_bmk_ci_#{TOOLCHAIN}'
          ci_project_config: 'tcwg_bmk_{hw}-#{TOOLCHAIN}-{toolchain_ver}-{target}-{bmk}-{cflags}'
      - shell: |
          #!/bin/bash
          if [ -f artifacts/failures ]; then
            exit 1
          fi
    publishers:
        - archive:
            artifacts: 'artifacts/**'
            latest-only: false

- job-template:
    name: tcwg_bmk_ci_#{TOOLCHAIN}-bisect-tcwg_bmk_{hw}-#{TOOLCHAIN}-{toolchain_ver}-{target}-{bmk}-{cflags}
    project-type: freestyle
    defaults: global
    properties:
      - bmk-properties
      - build-blocker:
          # Run at most 1 bisect job for all configurations.
          # Bisect jobs can easily run for 5+ hours, and a few of them
          # can hog the entire TCWG build farm for a long time.  Since
          # same regression tends to appear in multiple configurations,
          # run bisections for all configurations in-order.
          blocking-jobs:
            - "tcwg_bmk_dev_.*-tcwg_bmk_{hw}"
            - "tcwg_bmk_ci_.*-bisect-tcwg_bmk_{hw}-.*"
          queue-scanning: 'BUILDABLE'
    parameters:
      - string:
          name: ci_project
          default: 'tcwg_bmk_{hw}'
          description: "CI project ID; used as namespace for git branches"
      - string:
          name: ci_config
          default: '#{TOOLCHAIN}-{toolchain_ver}-{target}-{bmk}-{cflags}'
          description: "CI configuration ID: #{TOOLCHAIN}-{{toolchain_ver}}-{{target}}-{{bmk}}-{{cflags}}"
      - string:
          name: binutils_url
          default: '{binutils_url}'
          description: "binutils git URL"
      - string:
          name: gcc_url
          default: '{gcc_url}'
          description: "gcc git URL"
      - string:
          name: glibc_url
          default: '{glibc_url}'
          description: "glibc git URL"
#if TOOLCHAIN_llvm
      - string:
          name: llvm_url
          default: '{llvm_url}'
          description: "llvm git URL"
#endif
      - string:
          name: current_project
          default: ""
          description: "Project to bisect"
      - string:
          name: baseline_branch
          default: "baseline"
          description: "Baseline branch or sha1"
      - string:
          name: bad_branch
          default: ""
          description: "Bad branch or sha1"
      - file:
          name: jenkins-scripts/replay_log
          description: "Replay part of bisect using provided bisect log"
      - bmk-parameters
    disabled: false
    node: '{node}'
    concurrent: false
    display-name: 'TCWG Bisect tcwg_bmk_{hw}/#{TOOLCHAIN}-{toolchain_ver}-{target}-{bmk}-{cflags}'
    workspace: workspace/tcwg_bmk_$EXECUTOR_NUMBER
    scm:
      - jenkins-scripts
      - bmk-scripts
    wrappers:
      - timeout:
          timeout: 2880
      - timestamps
      - ssh-agent-credentials:
          # tcwg-buildslave user id
          users:
            - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
      - credentials-binding:
          - text:
              credential-id: TCWG_JIRA_PASSWORD
              variable: TCWG_JIRA_PASSWORD
    builders:
        - run-bisect-script
        - trigger-followup-builds:
            rr_project: 'tcwg_bmk_ci_#{TOOLCHAIN}'
            ci_project_config: 'tcwg_bmk_{hw}-#{TOOLCHAIN}-{toolchain_ver}-{target}-{bmk}-{cflags}'
    publishers:
        - archive:
            artifacts: 'artifacts/**'
            latest-only: false
        - email-ext:
            recipients: ${{FILE,path="artifacts/jenkins/mail-recipients.txt"}}
            content-type: text
            body: |
              ${{FILE,path="artifacts/jenkins/mail-body.txt"}}
            failure: true
            success: true
            send-to:
              - recipients
