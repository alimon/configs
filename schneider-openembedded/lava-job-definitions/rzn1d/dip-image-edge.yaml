device_type: rzn1d
job_name: SE ${MACHINE} dip-image-edge (ubi) ${MANIFEST_BRANCH}-${KERNEL_VERSION_PATCHLEVEL} ${BUILD_NUMBER}

timeouts:
  job:
    minutes: 100
  action:
    minutes: 70
  connection:
    minutes: 2
priority: medium
visibility: public

actions:

####################
# Deploy QSPI images
####################
- deploy:
    namespace: dfu-firmware
    to: tmpfs
    images:
      sf_fsbl:
        image_arg: --alt sf_fsbl --download {sf_fsbl}
        url: ${FSBL_URL}
      sf_trustedfw:
        image_arg: --alt sf_trustedfw --download {sf_trustedfw}
        url: ${OPTEE_ITB_URL}
      sf_uboot0:
        image_arg: --alt sf_uboot0 --download {sf_uboot0}
        url: ${UBOOT_ITB_URL}
      sf_uboot1:
        image_arg: --alt sf_uboot1 --download {sf_uboot1}
        url: ${UBOOT_ITB_URL}

- command:
    namespace: dfu-firmware
    name: set_boot_to_nand

- boot:
    namespace: dfu-firmware
    method: dfu
    timeout:
      minutes: 10

- command:
    namespace: test
    name: set_boot_to_qspi

##########################
# Configure ethernet ports
##########################
- command:
    namespace: test
    name: j17_off
- command:
    namespace: test
    name: j21_on
- command:
    namespace: test
    name: j22_off
- command:
    namespace: test
    name: j23_off
- command:
    namespace: test
    name: j24_off

####################
# empty-image.wic
# Deploy an empty filesystem with a single ext4 partition to the SDcard
# This is used for docker data in dip-image-edge
####################
- deploy:
    namespace: test-wic
    timeout:
      minutes: 100
    to: flasher
    images:
      image:
        url: https://snapshots.linaro.org/openembedded/warp7/zeus/imx7s-warp/latest/rpb/empty-image.rootfs.wic.bz2
        compression: bz2
      layout:
        url: https://snapshots.linaro.org/openembedded/warp7/zeus/imx7s-warp/latest/rpb/empty-image.rootfs.wic.bmap

####################
# dip-image-edge.ubi
####################
- deploy:
    namespace: test-ubi
    to: tmpfs
    images:
      n_fs1:
        image_arg: --alt n_fs1 --download {n_fs1}
        url: ${UBI_EDGE_IMAGE_URL}

- command:
    namespace: test-ubi
    name: set_boot_to_nand
- boot:
    namespace: test-ubi
    method: dfu
    timeout:
      minutes: 10
- command:
    namespace: test-ubi
    name: set_boot_to_qspi

- boot:
    namespace: test-ubi
    connection-namespace: test-ubi
    timeout:
      minutes: 20
    method: u-boot
    commands:
      - run linux_bestla
    auto_login:
      login_prompt: "login:"
      username: root
      password_prompt: "Password:"
      password: "P@ssword-1"
      login_commands:
      - "P@ssword-1"
      - "azertAZERT12345"
      - "azertAZERT12345"
      - "azertAZERT12345"
    prompts:
    - "Current password: "
    - "New password: "
    - "Retype new password: "
    - "root@rzn1-snarc:"

- test:
    namespace: test-ubi
    connection-namespace: test-ubi
    timeout:
      minutes: 60
    interactive:
    - name: basic-cmds-ubi
      prompts: ["root@snarc-soca9", "root@rzn1-snarc"]
      script:
      - command: uname -a
      - command: cat /proc/device-tree/model ; echo ""
      - command: ps aux --sort -rss
      - command: cat /proc/meminfo
      - command: cat /proc/cpuinfo
      - command: free -h
      - command: sysctl -a | grep vm.min_free_kbytes
      - command: mount
      - command: systemctl --no-pager status systemd-resolved
      - command: systemctl --no-pager restart systemd-resolved
      - command: systemctl --no-pager status systemd-resolved
      - command: ifconfig -a
      - command: ping -c 3 github.com
      - command: "mount | grep sdcard || echo ERROR: sdcard not mounted"
      - command: ls /tmp/sdcard
      - command: df -h
      - command: which docker
      - command: systemctl --no-pager status docker
      - command: sleep 100
      - command: systemctl --no-pager status docker
      - command: ifconfig -a
      - command: docker run hello-world
      - command: docker run -it ubuntu uname -a

metadata:
  machine: ${MACHINE}
  manifest branch: ${MANIFEST_BRANCH}-${KERNEL_VERSION_PATCHLEVEL}
  manifest commit: ${MANIFEST_COMMIT}
  build url: ${BUILD_URL}
  build location: ${PUBLISH_SERVER}${PUB_DEST}

notify:
    recipients:
    - to:
        method: email
        email: ryan.harkin@linaro.org
    criteria:
        status: incomplete
    verbosity: verbose
