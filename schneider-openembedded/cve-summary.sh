#!/bin/sh

set -x

#
# Combine the reports using sort/uniq.
# Note the wildcard for MACHINE (rzn1/soca9).
#
ARCHIVE="$JENKINS_HOME/jobs/$JOB_NAME/configurations/axis-DISTRO/dip/axis-MACHINE/*/axis-label/docker-stretch-amd64/builds/$BUILD_NUMBER/archive"
sort -uV $ARCHIVE/cve-*.txt      > cve.txt
sort -uV $ARCHIVE/base-cve-*.txt > base-cve.txt

#
# Detailed report in HTML format. Will be attached to email.
# Perl helper converts tab-delimited text to nested <ul> elements.
#
htmlify() {
	perl -F'\t' -lane '
		my %line;
		my ($type, $cve, $pkg, $url, @rest) = @F;
		sub list {
			return @_ ? join("", "<ul>\n", map("<li>$_</li>\n", @_), "</ul>") : ""
		};
		push @{$line{$type}}, ("<a href=\"$url\">$cve</a> $pkg" . list(@rest));
		END { foreach (reverse sort keys %line) {
			print "<b>$_ CVEs</b>", list(@{$line{$_}}) if @{$line{$_}}
		}}' $1
}
(
	echo "<h1>CVE changes</h1>"
	echo "<p>Submodule update strategy: <code>$SUBMODULES</code>.</p>"
	echo "<h2>Since last build</h2>"
	htmlify cve.txt
	echo "<h2>Since baseline</h2>"
	htmlify base-cve.txt
) > cve.html

#
# Summary report in plain text, gets embedded in the email.
# This just prints a count of each type of CVE.
#
summary() { #
	local NEW=`grep -c ^NEW $1`
	local CHANGED=`grep -c ^CHANGED $1`
	local FIXDE=`grep -c ^FIXED $1`
	printf "%2d NEW, %2d CHANGED, %2d FIXED\n" $NEW $CHANGED $FIXED
}
(
	echo -n "  - since last build: "
	summary cve.txt
	echo -n "  - since baseline:   "
	summary base-cve.txt
	echo "  - submodule update strategy was $SUBMODULES"
	echo "  - see attached report for details"
) > cve.sum

# Clean up
rm -f cve.txt base-cve.txt
